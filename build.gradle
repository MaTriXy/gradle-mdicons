import groovy.text.SimpleTemplateEngine

plugins {
    id 'groovy'
    id 'idea'
    id 'nu.studer.plugindev' version '1.0.3'
}

group ='com.tmiyamon'
version = '0.3.1'
sourceCompatibility = 1.6

repositories {
    jcenter()
    mavenCentral()
}

configurations {
    provided
}

sourceSets {
    main {
        compileClasspath += configurations.provided
    }
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    provided 'com.android.tools.build:gradle:1.+'
}

plugindev {
    pluginId 'com.tmiyamon.mdicons'
    pluginImplementationClass 'com.tmiyamon.mdicons.MaterialDesignIconsPlugin'
    pluginDescription 'Gradle plugin for Android to manage official material design icons.'
    pluginLicenses 'Apache-2.0'
    pluginTags 'gradle', 'plugin', 'android'
    authorId 'tmiyamon'
    authorName 'Takuya Miyamoto'
    authorEmail 'miyamototakuya@gmail.com'
    projectUrl 'https://github.com/tmiyamon/gradle-mdicons'
    projectInceptionYear '2014'
    done()
}

if (hasProperty('BINTRAY_API_KEY')) {
    bintray {
        user = "tmiyamon"
        key = "$BINTRAY_API_KEY"
        pkg.repo = 'gradle-plugins'
    }
}

task syncREADME << {
    def engine = new SimpleTemplateEngine()
    def readmeTemplate = file("templates/README.md")
    file("README.md").write(engine.createTemplate(readmeTemplate).make(['version': version]).toString())
}

task bumpup << {
    def gitTag = "git tag".execute()
    def grepVersion = "grep v$version".execute()
    gitTag | grepVersion

    if (grepVersion.waitFor() == 0) {
        println "$version is already tagged"
    } else {
        def engine = new SimpleTemplateEngine()
        def readmeTemplate = file("templates/README.md")
        file("README.md").write(engine.createTemplate(readmeTemplate).make(['version': version]).toString())

        "git add .".execute().waitFor()
        ["git", "commit", "-m", "bumping version to $version"].execute().waitFor()
        "git tag v$version".execute().waitFor()

        println "bumping version to $version"
    }
}
