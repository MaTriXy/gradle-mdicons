buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.0'
    }
}

apply plugin: 'groovy'
apply plugin: 'idea'

sourceCompatibility = 1.5
version = '0.1.0'
group ='com.tmiyamon'

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'com.android.tools.build:gradle:1.0.0'
}


task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task tag(type: Exec) {
    commandLine 'git', 'tag', "v${version}", '-m', "'bump to ${version}'"
    dependsOn('jar')
}

task pushTag(type: Exec) {
    commandLine 'git', 'push', '--tags', '-q', 'origin'
    dependsOn('tag')
}

if (BINTRAY_API_KEY) {
    apply plugin: 'com.jfrog.bintray'

    bintray {
        user = 'tmiyamon'
        key = BINTRAY_API_KEY

        //publications = ['mavenStuff']
        dryRun = DRY_RUN //Whether to run this as dry-run, without deploying
        publish = false //If version should be auto published after an upload
        pkg {
            repo = 'gradle-mdicons'
            name = 'gralde-mdicons'
            websiteUrl = 'https://github.com/tmiyamon/gradle-mdicons'
            issueTrackerUrl = 'https://github.com/tmiyamon/gradle-mdicons/issues'
            vcsUrl = 'https://github.com/tmiyamon/gradle-mdicons'
            licenses = ['Apache-2.0']
            publicDownloadNumbers = true

            version {
                name = '0.1.0'
                vcsTag = '0.1.0'
                attributes = ['gradle-plugin': 'com.tmiyamon:com.use.less.gradle:gradle-useless-plugin'] //Optional version-level attributes
                gpg {
                    sign = true //Determines whether to GPG sign the files. The default is false
                }
            }
        }
    }

    def bintrayUploadDepend = ['jar', 'sourcesJar']
    if (!DRY_RUN) {
        bintrayUploadDepend.add 'pushTag'
    }

    bintrayUpload {
        dependsOn(bintrayUploadDepend)
    }
}
